version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: agriconnect-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: agriconnect_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - agriconnect-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: agriconnect-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@agriconnect.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - agriconnect-network
    depends_on:
      - postgres

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agriconnect-backend
    restart: always
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: agriconnect_db
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
    networks:
      - agriconnect-network
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

  # Frontend (Next.js)
  frontend:
    build:
      context: ../AgriConnect-frontend
      dockerfile: Dockerfile
    container_name: agriconnect-frontend
    restart: always
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:5000
    ports:
      - "3000:3000"
    volumes:
      - ../AgriConnect-frontend/src:/app/src
      - ../AgriConnect-frontend/public:/app/public
      - ../AgriConnect-frontend/package.json:/app/package.json
    networks:
      - agriconnect-network
    depends_on:
      - backend

networks:
  agriconnect-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
